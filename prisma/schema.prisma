generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  name String
  email String @unique
  password String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  notes Note[]
  sharedNotes SharedNote[]
  comments Comment[]

  @@map("users")
}

model Note {
  id String @id @default(cuid())
  title String?
  content String
  isPublic Boolean @default(false) @map("is_public")
  authorId String @map("author_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  sharedWith SharedNote[]
  comments Comment[]

  @@map("notes")
}

model SharedNote {
  id String @id @default(cuid())
  noteId String @map("note_id")
  userId String @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("shared_notes")
}

model Comment {
  id String @id @default(cuid())
  authorId String @map("author_id")
  noteId String @map("note_id")
  content String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)

  @@map("comments")
}